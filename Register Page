import 'package:flutter/material.dart';
// ignore: unused_import
import 'package:hello_world/screens/Home_Page.dart';

class RegisterPage extends StatefulWidget {
  RegisterPage({Key key}) : super(key: key);

  @override
  _RegisterPageState createState() => _RegisterPageState();
}

class _RegisterPageState extends State<RegisterPage> {
  TextEditingController firstNameInputController;
  TextEditingController lastNameInputController;
  TextEditingController dateOfBirthInputController;
  TextEditingController phoneNumberInputController;
  TextEditingController emailInputController;
  TextEditingController pwdInputController;
  TextEditingController confirmPwdInputController;

  @override
  initState() {
    firstNameInputController = new TextEditingController();
    lastNameInputController = new TextEditingController();
    dateOfBirthInputController = new TextEditingController();
    phoneNumberInputController = new TextEditingController();
    emailInputController = new TextEditingController();
    pwdInputController = new TextEditingController();
    confirmPwdInputController = new TextEditingController();
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Create Account"),
      ),
      body: SingleChildScrollView(
        child: Column(children: <Widget>[
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: firstNameInputController,
              // ignore: missing_return
              validator: (value) {
                if (value.length < 3) {
                  return 'Please Enter a Valid First Name';
                }
              },

              decoration: InputDecoration(
                hintText: "First Name*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: lastNameInputController,
              // ignore: missing_return
              validator: (value) {
                if (value.length < 3) {
                  return 'Please Enter a Valid Last Name';
                }
              },

              decoration: InputDecoration(
                hintText: "Last Name*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: dateOfBirthInputController,
              decoration: InputDecoration(
                hintText: "Date Of Birth*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: phoneNumberInputController,
              // ignore: missing_return
              validator: (value) {
                if (value.length < 10) {
                  return 'Please Enter a Valid Phone Number';
                }
              },

              decoration: InputDecoration(
                hintText: "Phone Number*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: emailInputController,
              validator: emailValidator,
              decoration: InputDecoration(
                hintText: "Email Address*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: pwdInputController,
              validator: pwdValidator,
              decoration: InputDecoration(
                hintText: "Create Password*",
              ),
            ),
          ),
          Container(
            margin: EdgeInsets.all(16),
            child: TextFormField(
              controller: confirmPwdInputController,
              validator: confirmpwdValidator,
              decoration: InputDecoration(
                hintText: "Confirm Password*",
              ),
            ),
          ),
          RaisedButton(
            onPressed: () {
              print('' + firstNameInputController.text);
              print('' + lastNameInputController.text);
              print('' + dateOfBirthInputController.text);
              print('' + phoneNumberInputController.text);
              print('' + emailInputController.text);
              print('' + pwdInputController.text);
              print('' + confirmPwdInputController.text);

              Navigator.push(context,
                  MaterialPageRoute(builder: (context) => _HomePage2()));
            },
            child: Text("Create Account"),
            color: Colors.redAccent,
            textColor: Colors.white,
          )
        ]),
      ),
    );
  }
}

// ignore: non_constant_identifier_names
_HomePage2() {}

// ignore: unused_element
class _HomePage {}

String emailValidator(String value) {
  Pattern pattern =
      r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$';
  RegExp regex = new RegExp(pattern);
  if (!regex.hasMatch(value)) {
    return 'Email format is invalid';
  } else {
    return null;
  }
}

String pwdValidator(String value) {
  if (value.length < 8) {
    return 'Password must be longer than 8 characters';
  } else {
    return null;
  }
}

String confirmpwdValidator(String value) {
  if (pwdValidator == confirmpwdValidator) {
    return 'Password must be same as Create Password';
  } else {
    return null;
  }
}
